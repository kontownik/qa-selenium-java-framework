plugins {
    id 'java'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
    gradlePluginPortal()
}

dependencies {
    compile 'org.zaproxy:zap-clientapi:1.6.0'
    compile 'org.apache.logging.log4j:log4j-api:2.11.0'
    compile 'org.apache.logging.log4j:log4j-core:2.11.0'
    compile 'io.github.bonigarcia:webdrivermanager:3.4.0'
    compile 'ru.yandex.qatools.htmlelements:htmlelements-java:1.18'
    compile 'com.pojosontheweb:monte-repack:1.0'    //ScreenRecorder
    compile 'ws.schild:jave-core:2.4.6'             //ScreenRecorder
    compile 'org.seleniumhq.selenium:selenium-java:3.14.0'
    compile group: 'org.testng', name: 'testng', version: '6.14.3'  //TODO: fix syntax
}

group = 'co.netguru.qa'
version = '1.0'
description = 'java-framework'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

cleanTest {
    delete fileTree(dir: "${rootDir}/screenshots/", include: "*.png")
    println "Cleaned ${rootDir}/screenshots/"
    delete fileTree(dir: "${rootDir}/logs/", include: "*.html")
    delete fileTree(dir: "${rootDir}/logs/", include: "*.log")
    println "Cleaned ${rootDir}/logs/"
    delete fileTree(dir: "${rootDir}/pageSources/", include: "*.html")
    println "Cleaned ${rootDir}/pageSources/"
    delete fileTree(dir: "${rootDir}/videos/", include: "*.mp4")
    println "Cleaned ${rootDir}/videos/"
}

test {
    useTestNG() {
        useDefaultListeners = true
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    reports.html.enabled = false    // turn off Gradle's HTML report
}