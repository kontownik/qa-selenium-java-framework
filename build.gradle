buildscript {
    repositories {
        mavenLocal()
        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

plugins {
    id 'java'
    id "io.qameta.allure" version "2.5"
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}


dependencies {
    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.1.1'
    compile group: 'io.rest-assured', name: 'json-path', version: '4.1.1'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '4.1.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.9'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.12.0'

    compile 'org.zaproxy:zap-clientapi:1.6.0'
    compile 'org.apache.logging.log4j:log4j-api:2.11.0'
    compile 'org.apache.logging.log4j:log4j-core:2.11.0'
    compile 'io.github.bonigarcia:webdrivermanager:3.4.0'
    compile 'ru.yandex.qatools.htmlelements:htmlelements-java:1.18'
    compile 'com.pojosontheweb:monte-repack:1.0'
    compile 'ws.schild:jave-core:2.4.6'
    compile 'ws.schild:jave-all-deps:2.6.0'
    compile 'ws.schild:jave-native-linux64:2.4.6'
    compile 'ws.schild:jave-native-linux32:2.4.6'
    compile 'ws.schild:jave-native-osx64:2.4.6'
    compile 'ws.schild:jave-native-win64:2.4.6'
    compile 'ws.schild:jave-native-win32:2.4.6'
    compile 'info.cukes:cucumber-junit:1.2.5'
    compile 'info.cukes:cucumber-java8:1.2.5'
    compile 'info.cukes:cucumber-testng:1.2.5'
    compile 'org.seleniumhq.selenium:selenium-java:3.14.0'
    compile 'org.testng:testng:6.14.3'
}

group = 'co.netguru.qa'
version = '1.0'
description = 'java-framework'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

cleanTest {
    delete fileTree(dir: "${rootDir}/screenshots/", include: "*.png")
    println "Cleaned ${rootDir}/screenshots/"
    delete fileTree(dir: "${rootDir}/logs/", include: "*.html")
    delete fileTree(dir: "${rootDir}/logs/", include: "*.log")
    println "Cleaned ${rootDir}/logs/"
    delete fileTree(dir: "${rootDir}/pageSources/", include: "*.html")
    println "Cleaned ${rootDir}/pageSources/"
    delete fileTree(dir: "${rootDir}/videos/", include: "*.mp4")
    delete fileTree(dir: "${rootDir}/videos/", include: "*.avi")
    println "Cleaned ${rootDir}/videos/"
}

test {
    dependsOn 'cleanTest'
    useTestNG() {
        useDefaultListeners = true
        outputDirectory = file("$project.projectDir//build//reports//testng-report")
        String suitesProperty = "runSuites"

        if (!project.hasProperty(suitesProperty) || project.findProperty(suitesProperty) == "gui") {
            suites 'src/test/resources/suites/gui-suite.xml'
        } else if (!project.hasProperty(suitesProperty) || project.findProperty(suitesProperty) == "api") {
            suites 'src/test/resources/suites/api-suite.xml'
        } else {
            suites 'src/test/resources/suites/gui-suite.xml'
        }

    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    reports.html.enabled = false    // turn off Gradle's HTML report
}

allure {
    autoconfigure = true
    version = '2.8.1'
    clean = true
    useTestNG {
        version = '2.8.1'
    }
}